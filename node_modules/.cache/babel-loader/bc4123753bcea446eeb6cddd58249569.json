{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import ToDo from'./ToDo';var ToDoList=function ToDoList(_ref){var tasks=_ref.tasks,match=_ref.match,onToggleCompleted=_ref.onToggleCompleted;var filteredTasks;switch(match.params.filter){case'completed':filteredTasks=tasks.filter(function(task){return task.completed;});// ici tasks c'est le param en entrée et filter c'est une fonction pour filter un array\nbreak;default:filteredTasks=tasks;}if(filteredTasks.length===0){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"m-3\",children:\"Liste de t\\xE2ches\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"list-group m-3\",children:/*#__PURE__*/_jsx(\"li\",{className:\"list-group-item\",children:\"Aucune t\\xE2che \\xE0 afficher\"})})]});}else{return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"m-3\",children:\"Liste de t\\xE2ches\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"list-group m-3\",children:filteredTasks.map(function(task){return/*#__PURE__*/_jsx(ToDo,{task:task,onToggleCompleted:onToggleCompleted},task.id);})// afficher ce qui est terminé \n})]});}};export default ToDoList;","map":{"version":3,"sources":["C:/Users/MeliMelo/Desktop/COURSM2i/coursREACT/to-do-list/src/Components/ToDoList.js"],"names":["React","ToDo","ToDoList","tasks","match","onToggleCompleted","filteredTasks","params","filter","task","completed","length","map","id"],"mappings":"6IAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CAGA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAuC,IAArCC,CAAAA,KAAqC,MAArCA,KAAqC,CAA9BC,KAA8B,MAA9BA,KAA8B,CAAvBC,iBAAuB,MAAvBA,iBAAuB,CACpD,GAAIC,CAAAA,aAAJ,CAEA,OAAQF,KAAK,CAACG,MAAN,CAAaC,MAArB,EACI,IAAK,WAAL,CACIF,aAAa,CAAGH,KAAK,CAACK,MAAN,CAAa,SAAAC,IAAI,QAAGA,CAAAA,IAAI,CAACC,SAAR,EAAjB,CAAhB,CAAoD;AACpD,MACJ,QACIJ,aAAa,CAAGH,KAAhB,CALR,CAQA,GAAGG,aAAa,CAACK,MAAd,GAAyB,CAA5B,CAA8B,CAC1B,mBACI,wCACA,WAAI,SAAS,CAAC,KAAd,gCADA,cAEA,WAAI,SAAS,CAAC,gBAAd,uBACI,WAAI,SAAS,CAAC,iBAAd,2CADJ,EAFA,GADJ,CAQH,CATD,IASM,CAEF,mBACI,wCACA,WAAI,SAAS,CAAC,KAAd,gCADA,cAEA,WAAI,SAAS,CAAC,gBAAd,UAEQL,aAAa,CAACM,GAAd,CAAkB,SAACH,IAAD,qBAAU,KAAC,IAAD,EAAM,IAAI,CAAEA,IAAZ,CAAgC,iBAAiB,CAAEJ,iBAAnD,EAAuBI,IAAI,CAACI,EAA5B,CAAV,EAAlB,CACA;AAHR,EAFA,GADJ,CAWH,CACJ,CAlCD,CAoCA,cAAeX,CAAAA,QAAf","sourcesContent":["import React from 'react';\r\nimport ToDo from './ToDo';\r\n\r\n\r\nconst ToDoList = ({tasks, match, onToggleCompleted}) => {\r\n    let filteredTasks;\r\n\r\n    switch (match.params.filter){\r\n        case 'completed': \r\n            filteredTasks = tasks.filter(task =>task.completed) // ici tasks c'est le param en entrée et filter c'est une fonction pour filter un array\r\n            break;\r\n        default :\r\n            filteredTasks = tasks\r\n    }\r\n\r\n    if(filteredTasks.length === 0){\r\n        return (\r\n            <>\r\n            <h1 className=\"m-3\">Liste de tâches</h1>\r\n            <ul className=\"list-group m-3\">\r\n                <li className=\"list-group-item\">Aucune tâche à afficher</li>\r\n            </ul>\r\n            </>\r\n        )\r\n    }else {\r\n\r\n        return (\r\n            <>\r\n            <h1 className=\"m-3\">Liste de tâches</h1>\r\n            <ul className=\"list-group m-3\">\r\n                {\r\n                    filteredTasks.map((task) => <ToDo task={task} key={task.id} onToggleCompleted={onToggleCompleted}/>)\r\n                    // afficher ce qui est terminé \r\n                }\r\n            </ul>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToDoList;"]},"metadata":{},"sourceType":"module"}
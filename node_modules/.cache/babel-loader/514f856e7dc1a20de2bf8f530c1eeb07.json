{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\MeliMelo\\\\Desktop\\\\COURSM2i\\\\coursREACT\\\\to-do-list\\\\src\\\\Components\\\\ToDoList.js\";\nimport React from 'react';\nimport ToDo from './ToDo';\n\nconst ToDoList = ({\n  tasks,\n  match\n}) => {\n  let filteredTasks;\n\n  switch (match.params.filter) {\n    case 'completed':\n      fileredTasks = tasks.filter(task => task.completed);\n      break;\n\n    default:\n      filteredTasks = tasks;\n  }\n\n  if (filteredTasks.length === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"m-3\",\n        children: \"Liste de t\\xE2ches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group m-3\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: \"Aucune t\\xE2che \\xE0 afficher\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"m-3\",\n        children: \"Liste de t\\xE2ches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group m-3\",\n        children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(ToDo, {\n          task: task\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 49\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["C:/Users/MeliMelo/Desktop/COURSM2i/coursREACT/to-do-list/src/Components/ToDoList.js"],"names":["React","ToDo","ToDoList","tasks","match","filteredTasks","params","filter","fileredTasks","task","completed","length","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAoB;AACjC,MAAIC,aAAJ;;AAEA,UAAQD,KAAK,CAACE,MAAN,CAAaC,MAArB;AACI,SAAK,WAAL;AACIC,MAAAA,YAAY,GAAGL,KAAK,CAACI,MAAN,CAAaE,IAAI,IAAGA,IAAI,CAACC,SAAzB,CAAf;AACA;;AACJ;AACIL,MAAAA,aAAa,GAAGF,KAAhB;AALR;;AAQA,MAAGE,aAAa,CAACM,MAAd,KAAyB,CAA5B,EAA8B;AAC1B,wBACI;AAAA,8BACA;AAAI,QAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA,+BACI;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA,oBADJ;AAQH,GATD,MASM;AAEF,wBACI;AAAA,8BACA;AAAI,QAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA,kBAEQN,aAAa,CAACO,GAAd,CAAmBH,IAAD,iBAAU,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEA;AAAZ,WAAuBA,IAAI,CAACI,EAA5B;AAAA;AAAA;AAAA;AAAA,gBAA5B;AAFR;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA,oBADJ;AAUH;AACJ,CAjCD;;KAAMX,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\nimport ToDo from './ToDo';\r\n\r\n\r\nconst ToDoList = ({tasks, match}) => {\r\n    let filteredTasks;\r\n\r\n    switch (match.params.filter){\r\n        case 'completed': \r\n            fileredTasks = tasks.filter(task =>task.completed)\r\n            break;\r\n        default :\r\n            filteredTasks = tasks\r\n    }\r\n\r\n    if(filteredTasks.length === 0){\r\n        return (\r\n            <>\r\n            <h1 className=\"m-3\">Liste de tâches</h1>\r\n            <ul className=\"list-group m-3\">\r\n                <li className=\"list-group-item\">Aucune tâche à afficher</li>\r\n            </ul>\r\n            </>\r\n        )\r\n    }else {\r\n\r\n        return (\r\n            <>\r\n            <h1 className=\"m-3\">Liste de tâches</h1>\r\n            <ul className=\"list-group m-3\">\r\n                {\r\n                    filteredTasks.map((task) => <ToDo task={task} key={task.id}/>)\r\n                }\r\n            </ul>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToDoList;"]},"metadata":{},"sourceType":"module"}
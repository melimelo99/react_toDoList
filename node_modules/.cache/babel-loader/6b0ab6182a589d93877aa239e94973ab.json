{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\MeliMelo\\\\Desktop\\\\COURSM2i\\\\coursREACT\\\\to-do-list\\\\src\\\\Components\\\\ToDo.js\";\nimport React from 'react';\n\nclass ToDo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      completed: this.props.task.completed\n    };\n\n    this.toggleCompleted = () => {\n      this.setState(prevState => ({\n        //prevState ancienne version de l'état , si true alors avec la suite devient false\n        completed: !prevState.completed\n      }));\n      this.props.onToggleCompleted(this.props.task.id); // execution de la foncion de App.js, id de la tâche que je veux modifier\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list-group-item d-flex align-tiems-center \" + (this.state.completed ? 'bg-success' : null),\n      children: [this.props.task.name, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-sm ml-auto btn-outline-success \" + (this.state.completed ? 'btn-success' : 'btn-hotline-sucess'),\n        onClick: () => this.toggleCompleted(),\n        children: \"\\u2713\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ToDo;","map":{"version":3,"sources":["C:/Users/MeliMelo/Desktop/COURSM2i/coursREACT/to-do-list/src/Components/ToDo.js"],"names":["React","ToDo","Component","state","completed","props","task","toggleCompleted","setState","prevState","onToggleCompleted","id","render","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAE/BC,KAF+B,GAExB;AACHC,MAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBF;AADxB,KAFwB;;AAAA,SAM/BG,eAN+B,GAMb,MAAM;AACpB,WAAKC,QAAL,CAAcC,SAAS,KAAG;AAAM;AAC5BL,QAAAA,SAAS,EAAE,CAACK,SAAS,CAACL;AADA,OAAH,CAAvB;AAGA,WAAKC,KAAL,CAAWK,iBAAX,CAA6B,KAAKL,KAAL,CAAWC,IAAX,CAAgBK,EAA7C,EAJoB,CAIoC;AAC3D,KAX8B;AAAA;;AAa/BC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAI,MAAA,SAAS,EAAE,gDAA+C,KAAKT,KAAL,CAAWC,SAAX,GAAsB,YAAtB,GAAoC,IAAnF,CAAf;AAAA,iBACC,KAAKC,KAAL,CAAWC,IAAX,CAAgBO,IADjB,eAEA;AAAQ,QAAA,SAAS,EAAE,6CAA4C,KAAKV,KAAL,CAAWC,SAAX,GAAsB,aAAtB,GAAsC,oBAAlF,CAAnB;AAA4H,QAAA,OAAO,EAAE,MAAM,KAAKG,eAAL,EAA3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AApB8B;;AAuBnC,eAAeN,IAAf","sourcesContent":["import React from 'react';\r\n\r\nclass ToDo extends React.Component {\r\n\r\n    state ={\r\n        completed: this.props.task.completed\r\n    }\r\n\r\n    toggleCompleted = () => {\r\n        this.setState(prevState=>({     //prevState ancienne version de l'état , si true alors avec la suite devient false\r\n            completed: !prevState.completed\r\n        }))\r\n        this.props.onToggleCompleted(this.props.task.id)        // execution de la foncion de App.js, id de la tâche que je veux modifier\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <li className={\"list-group-item d-flex align-tiems-center \"+ (this.state.completed? 'bg-success': null)}>\r\n            {this.props.task.name}\r\n            <button className={\"btn btn-sm ml-auto btn-outline-success \" +(this.state.completed? 'btn-success' : 'btn-hotline-sucess')} onClick={() => this.toggleCompleted()}>&#x2713;</button>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToDo;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\MeliMelo\\\\Desktop\\\\COURSM2i\\\\coursREACT\\\\to-do-list\\\\src\\\\Components\\\\App.js\";\nimport React from 'react';\nimport ToDoList from './ToDoList';\nimport NavBar from './NavBar';\nimport AddTask from './AddTask';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport initialData from '../initialData';\nimport uniqueid from 'uniqueid';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: initialData\n    };\n\n    this.onToggleCompleted = taskId => {\n      let taskToUpdate = this.state.tasks.find(task => task.id === taskId); // recherche dans la liste de tâche celle que je dois modifier (pour les afficher dans completed)\n\n      taskToUpdate.completed = !taskToUpdate.completed;\n      this.setState(prevState => {\n        prevState.tasks.map(task => {\n          return task.id === taskId ? taskToUpdate : task;\n        });\n      });\n    };\n\n    this.onAddTask = newTaskName => {\n      let newTask = {\n        id: uniqueid(),\n        name: newTaskName,\n        completed: false\n      };\n    };\n  }\n\n  //onToggleCompleted pour faire passer cette fonction a ToDoList.js ligne 31\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"todo\",\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: [/*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/add-task\",\n            component: AddTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/:filter?\",\n            render: props => /*#__PURE__*/_jsxDEV(ToDoList, { ...props,\n              tasks: this.state.tasks,\n              onToggleCompleted: this.onToggleCompleted\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 56\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/MeliMelo/Desktop/COURSM2i/coursREACT/to-do-list/src/Components/App.js"],"names":["React","ToDoList","NavBar","AddTask","BrowserRouter","Switch","Route","initialData","uniqueid","App","Component","state","tasks","onToggleCompleted","taskId","taskToUpdate","find","task","id","completed","setState","prevState","map","onAddTask","newTaskName","newTask","name","render","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,aAAR,EAAuBC,MAAvB,EAA+BC,KAA/B,QAA2C,kBAA3C;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACNC,MAAAA,KAAK,EAAEL;AADD,KAFwB;;AAAA,SAMhCM,iBANgC,GAMbC,MAAD,IAAY;AAC5B,UAAIC,YAAY,GAAG,KAAKJ,KAAL,CAAWC,KAAX,CAAiBI,IAAjB,CAAsBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,MAA1C,CAAnB,CAD4B,CAC0C;;AACtEC,MAAAA,YAAY,CAACI,SAAb,GAAyB,CAACJ,YAAY,CAACI,SAAvC;AAEA,WAAKC,QAAL,CAAcC,SAAS,IAAI;AACzBA,QAAAA,SAAS,CAACT,KAAV,CAAgBU,GAAhB,CAAoBL,IAAI,IAAI;AAC1B,iBAAOA,IAAI,CAACC,EAAL,KAAYJ,MAAZ,GAAqBC,YAArB,GAAoCE,IAA3C;AACD,SAFD;AAGD,OAJD;AAKD,KAf+B;;AAAA,SAiBhCM,SAjBgC,GAiBnBC,WAAD,IAAiB;AAC3B,UAAIC,OAAO,GAAG;AACZP,QAAAA,EAAE,EAAEV,QAAQ,EADA;AAEZkB,QAAAA,IAAI,EAAEF,WAFM;AAGZL,QAAAA,SAAS,EAAC;AAHE,OAAd;AAKD,KAvB+B;AAAA;;AA0BlC;AACEQ,EAAAA,MAAM,GAAE;AACN,wBACE;AAAS,MAAA,EAAE,EAAC,MAAZ;AAAA,6BACE,QAAC,aAAD;AAAA,gCACE,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAE,WAAb;AAAyB,YAAA,SAAS,EAAExB;AAApC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,WAAZ;AAAwB,YAAA,MAAM,EAAGyB,KAAD,iBAAW,QAAC,QAAD,OAAcA,KAAd;AAAsB,cAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWC,KAAxC;AAA+C,cAAA,iBAAiB,EAAE,KAAKC;AAAvE;AAAA;AAAA;AAAA;AAAA;AAA3C;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAvC+B;;AA0ClC,eAAeJ,GAAf","sourcesContent":["import React from 'react';\r\nimport ToDoList from './ToDoList';\r\nimport NavBar from './NavBar';\r\nimport AddTask from './AddTask';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport initialData from '../initialData';\r\nimport uniqueid from 'uniqueid';\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    tasks: initialData\r\n  }\r\n\r\n  onToggleCompleted=(taskId) => {\r\n    let taskToUpdate = this.state.tasks.find(task => task.id === taskId)  // recherche dans la liste de tâche celle que je dois modifier (pour les afficher dans completed)\r\n    taskToUpdate.completed = !taskToUpdate.completed;\r\n\r\n    this.setState(prevState => {\r\n      prevState.tasks.map(task => {\r\n        return task.id === taskId ? taskToUpdate : task\r\n      })\r\n    })\r\n  }\r\n\r\n  onAddTask = (newTaskName) => {\r\n    let newTask = {\r\n      id: uniqueid(),\r\n      name: newTaskName,\r\n      completed:false\r\n    }\r\n  }\r\n\r\n\r\n//onToggleCompleted pour faire passer cette fonction a ToDoList.js ligne 31\r\n  render(){\r\n    return (\r\n      <section id=\"todo\">\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route path =\"/add-task\" component={AddTask}/>\r\n            <Route path=\"/:filter?\" render={(props) => <ToDoList {...props}  tasks={this.state.tasks} onToggleCompleted={this.onToggleCompleted}/>}/> \r\n          </Switch>\r\n          <NavBar/>\r\n        </BrowserRouter>\r\n      </section>\r\n    )\r\n  } \r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}